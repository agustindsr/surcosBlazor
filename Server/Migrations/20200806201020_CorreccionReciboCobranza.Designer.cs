// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurcosBlazor.Server.Context;

namespace SurcosBlazor.Server.Migrations
{
    [DbContext(typeof(WebApiDbContext))]
    [Migration("20200806201020_CorreccionReciboCobranza")]
    partial class CorreccionReciboCobranza
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SurcosBlazor.Server.Helpers.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("VendedorId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("caja");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.CategoriaCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categoriaCliente");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.CategoriaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("clasificacion")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categoriaProducto");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("fechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("saldoCC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaClienteId");

                    b.HasIndex("DomicilioId");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Comprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("totalCancelado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalComprobante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalImputado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("comprobante");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Comprobante");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<bool>("eCommerce")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("departamento");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("deposito");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<double>("bonificacion")
                        .HasColumnType("float");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoPresentacionId");

                    b.ToTable("detalleFactura");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleFacturaCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacturaComprasId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<double>("bonificacion")
                        .HasColumnType("float");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FacturaComprasId");

                    b.HasIndex("ProductoPresentacionId");

                    b.ToTable("detalleFacturaCompras");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleFormula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormulaProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FormulaProductoId");

                    b.HasIndex("ProductoPresentacionId");

                    b.ToTable("detalleFormula");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleListaPrecios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ListaPreciosId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("cantidadMinima")
                        .HasColumnType("int");

                    b.Property<int>("clasificacion")
                        .HasColumnType("int");

                    b.Property<decimal>("porcentajeDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("porcentajeRentabilidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioCosto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioUnitarioFinal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ListaPreciosId");

                    b.HasIndex("ProductoPresentacionId");

                    b.ToTable("detalleListaPrecios");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetallePago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CajaId")
                        .HasColumnType("int");

                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.HasIndex("ComprobanteId");

                    b.ToTable("detallePago");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetallePedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoPresentacionId");

                    b.ToTable("detallePedido");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Domicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("latitud")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("longitud")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("manzana")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("piso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("domicilio");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.EstadoComprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoComprobante");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.EstadoFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("estadoFactura");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.EstadoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("estadoPedido");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.EstadoRecibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("estadoRecibo");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.FormulaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoPresentacionId")
                        .IsUnique();

                    b.ToTable("FormulaProducto");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ImputacionComprobantesVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComprobanteImputadoId")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaVentaId")
                        .HasColumnType("int");

                    b.Property<int>("FacturaVentasId")
                        .HasColumnType("int");

                    b.Property<int?>("ReciboCobranzasId")
                        .HasColumnType("int");

                    b.Property<decimal>("totalImputado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ComprobanteImputadoId");

                    b.HasIndex("FacturaVentaId");

                    b.HasIndex("ReciboCobranzasId");

                    b.ToTable("imputacionComprobantesVenta");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepositoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPresentacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("cantidadPesoRealEnExistencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("cantidadUnidadesEnExistencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.HasIndex("ProductoPresentacionId");

                    b.ToTable("inventario");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ListaPrecios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TipoListaPrecioId")
                        .HasColumnType("int");

                    b.Property<int>("clasificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("vigente")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TipoListaPrecioId");

                    b.ToTable("listaPrecios");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.MovimientoCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CajaId")
                        .HasColumnType("int");

                    b.Property<int?>("ReciboCobranzasId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMovimientoCajaId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("entra")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("sale")
                        .HasColumnType("bit");

                    b.Property<decimal>("totalMovimiento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.HasIndex("ReciboCobranzasId");

                    b.HasIndex("TipoMovimientoCajaId");

                    b.ToTable("movimientoCaja");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.MovimientoInventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventarioId")
                        .HasColumnType("int");

                    b.Property<int>("cantidadUnidadesMovida")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("entra")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("sale")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InventarioId");

                    b.ToTable("movimientoInventario");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoPedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ListaPreciosId")
                        .HasColumnType("int");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.Property<string>("apellidoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celularCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DomicilioId");

                    b.HasIndex("EstadoPedidoId");

                    b.HasIndex("ListaPreciosId");

                    b.HasIndex("VendedorId");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.PresentacionProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UnidadId");

                    b.ToTable("presentacionProducto");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaProductoId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProductoId");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ProductoPresentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PresentacionProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("cantidadStockMinima")
                        .HasColumnType("int");

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("esFormulado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PresentacionProductoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ProductoPresentacion");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("razonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("saldoCC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DomicilioId");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("eCommerce")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("provincias");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoComprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tipoComprobante");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoListaPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("minimoDeCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tipoListaPrecio");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoListaPrecioCategoriaCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaClienteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoListaPrecioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaClienteId");

                    b.HasIndex("TipoListaPrecioId");

                    b.ToTable("TipoListaPrecioCategoriaCliente");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoListaPrecioProvincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoListaPrecioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoListaPrecioId");

                    b.ToTable("TipoListaPrecioProvincia");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoMovimientoCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tipoMovimientoCaja");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("unidad");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.UserCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CajaId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.ToTable("userCaja");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.UserDeposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepositoId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.ToTable("userDeposito");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.UserVendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VendedorId");

                    b.ToTable("userVendedor");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clasificacion")
                        .HasColumnType("int");

                    b.Property<bool>("eCommerce")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("trabajaFeriado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DomicilioId");

                    b.ToTable("vendedor");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.VendedorDepartamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.Property<bool>("entregaDomingo")
                        .HasColumnType("bit");

                    b.Property<bool>("entregaJueves")
                        .HasColumnType("bit");

                    b.Property<bool>("entregaLunes")
                        .HasColumnType("bit");

                    b.Property<bool>("entregaMartes")
                        .HasColumnType("bit");

                    b.Property<bool>("entregaMiercoles")
                        .HasColumnType("bit");

                    b.Property<bool>("entregaSabado")
                        .HasColumnType("bit");

                    b.Property<bool>("entregaViernes")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("vendedorDepartamento");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Factura", b =>
                {
                    b.HasBaseType("SurcosBlazor.Shared.Entidades.Comprobante");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DepositoId")
                        .HasColumnType("int");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ListaPreciosId")
                        .HasColumnType("int");

                    b.Property<int>("TipoComprobanteId")
                        .HasColumnType("int");

                    b.Property<int?>("VendedorId")
                        .HasColumnType("int");

                    b.Property<string>("apellidoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celularCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DepositoId");

                    b.HasIndex("DomicilioId");

                    b.HasIndex("EstadoFacturaId");

                    b.HasIndex("ListaPreciosId");

                    b.HasIndex("TipoComprobanteId");

                    b.HasIndex("VendedorId");

                    b.HasDiscriminator().HasValue("Factura");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.FacturaCompras", b =>
                {
                    b.HasBaseType("SurcosBlazor.Shared.Entidades.Comprobante");

                    b.Property<int>("DepositoId")
                        .HasColumnName("FacturaCompras_DepositoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFacturaId")
                        .HasColumnName("FacturaCompras_EstadoFacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("TipoComprobanteId")
                        .HasColumnName("FacturaCompras_TipoComprobanteId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .HasColumnName("FacturaCompras_codigo")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("DepositoId");

                    b.HasIndex("EstadoFacturaId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("TipoComprobanteId");

                    b.HasDiscriminator().HasValue("FacturaCompras");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ReciboCobranzas", b =>
                {
                    b.HasBaseType("SurcosBlazor.Shared.Entidades.Comprobante");

                    b.Property<int>("ClienteId")
                        .HasColumnName("ReciboCobranzas_ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoReciboId")
                        .HasColumnType("int");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoReciboId");

                    b.HasDiscriminator().HasValue("ReciboCobranzas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SurcosBlazor.Server.Helpers.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SurcosBlazor.Server.Helpers.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Server.Helpers.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SurcosBlazor.Server.Helpers.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Server.Helpers.ApplicationUser", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("SurcosBlazor.Shared.Entidades.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Cliente", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.CategoriaCliente", "Categoria")
                        .WithMany("Cliente")
                        .HasForeignKey("CategoriaClienteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SurcosBlazor.Shared.Entidades.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Departamento", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Provincia", "Provincia")
                        .WithMany("departamentos")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleFactura", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Factura", "Factura")
                        .WithMany("detallesFactura")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithMany()
                        .HasForeignKey("ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleFacturaCompras", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.FacturaCompras", "Factura")
                        .WithMany("detallesFactura")
                        .HasForeignKey("FacturaComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithMany()
                        .HasForeignKey("ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleFormula", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.FormulaProducto", "FormulaProducto")
                        .WithMany("DetallesFormula")
                        .HasForeignKey("FormulaProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithMany("DetallesFormula")
                        .HasForeignKey("ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetalleListaPrecios", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.ListaPrecios", "ListaPrecios")
                        .WithMany("DetalleListaPrecios")
                        .HasForeignKey("ListaPreciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithMany()
                        .HasForeignKey("ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetallePago", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Comprobante", "Comprobante")
                        .WithMany()
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.DetallePedido", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Pedido", "Pedido")
                        .WithMany("detallePedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithMany()
                        .HasForeignKey("ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Domicilio", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Departamento", "Departamento")
                        .WithMany("Domicilio")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SurcosBlazor.Shared.Entidades.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.FormulaProducto", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithOne("FormulaProducto")
                        .HasForeignKey("SurcosBlazor.Shared.Entidades.FormulaProducto", "ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ImputacionComprobantesVenta", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Comprobante", "ComprobanteImputado")
                        .WithMany()
                        .HasForeignKey("ComprobanteImputadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Factura", "FacturaVenta")
                        .WithMany("ComprobantesImputados")
                        .HasForeignKey("FacturaVentaId");

                    b.HasOne("SurcosBlazor.Shared.Entidades.ReciboCobranzas", null)
                        .WithMany("Imputaciones")
                        .HasForeignKey("ReciboCobranzasId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Inventario", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Deposito", "Deposito")
                        .WithMany("Inventarios")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ProductoPresentacion", "ProductoPresentacion")
                        .WithMany()
                        .HasForeignKey("ProductoPresentacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ListaPrecios", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.TipoListaPrecio", "TipoListaPrecio")
                        .WithMany("ListasPrecios")
                        .HasForeignKey("TipoListaPrecioId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.MovimientoCaja", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Caja", "Caja")
                        .WithMany("MovimientosCaja")
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ReciboCobranzas", "ReciboCobranzas")
                        .WithMany("movimientosCaja")
                        .HasForeignKey("ReciboCobranzasId");

                    b.HasOne("SurcosBlazor.Shared.Entidades.TipoMovimientoCaja", "TipoMovimientoCaja")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoCajaId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.MovimientoInventario", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Inventario", "Inventario")
                        .WithMany("MovimientosInventario")
                        .HasForeignKey("InventarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Pedido", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("SurcosBlazor.Shared.Entidades.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.EstadoPedido", "EstadoPedido")
                        .WithMany()
                        .HasForeignKey("EstadoPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ListaPrecios", "ListaPrecios")
                        .WithMany()
                        .HasForeignKey("ListaPreciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.PresentacionProducto", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Producto", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.CategoriaProducto", "CategoriaProducto")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaProductoId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ProductoPresentacion", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.PresentacionProducto", "PresentacionProducto")
                        .WithMany()
                        .HasForeignKey("PresentacionProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Producto", "Producto")
                        .WithMany("productoPresentaciones")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Proveedor", "Proveedor")
                        .WithMany("productoPresentaciones")
                        .HasForeignKey("ProveedorId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Proveedor", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoListaPrecioCategoriaCliente", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.CategoriaCliente", "CategoriaCliente")
                        .WithMany("TipoListaPrecioCategoriaClientes")
                        .HasForeignKey("CategoriaClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.TipoListaPrecio", "TipoListaPrecio")
                        .WithMany("TipoListaPrecioCategoriaClientes")
                        .HasForeignKey("TipoListaPrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.TipoListaPrecioProvincia", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Provincia", "Provincia")
                        .WithMany("TipoListaPrecioProvincia")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.TipoListaPrecio", "TipoListaPrecio")
                        .WithMany("TipoListaPrecioProvincias")
                        .HasForeignKey("TipoListaPrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.UserCaja", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.UserDeposito", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.UserVendedor", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Vendedor", "Vendedor")
                        .WithMany("usuarios")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Vendedor", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Domicilio", "domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.VendedorDepartamento", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Departamento", "departamento")
                        .WithMany("VendedorDepartamentos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Vendedor", "vendedor")
                        .WithMany("VendedorDepartamento")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.Factura", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.EstadoFactura", "EstadoFactura")
                        .WithMany()
                        .HasForeignKey("EstadoFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.ListaPrecios", "ListaPrecios")
                        .WithMany()
                        .HasForeignKey("ListaPreciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.TipoComprobante", "TipoComprobante")
                        .WithMany()
                        .HasForeignKey("TipoComprobanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId");
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.FacturaCompras", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.EstadoFactura", "EstadoFactura")
                        .WithMany()
                        .HasForeignKey("EstadoFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.TipoComprobante", "TipoComprobante")
                        .WithMany()
                        .HasForeignKey("TipoComprobanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurcosBlazor.Shared.Entidades.ReciboCobranzas", b =>
                {
                    b.HasOne("SurcosBlazor.Shared.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurcosBlazor.Shared.Entidades.EstadoRecibo", "EstadoRecibo")
                        .WithMany()
                        .HasForeignKey("EstadoReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
