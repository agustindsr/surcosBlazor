@page "/login"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject ILoginService loginService
@inject IJSRuntime js
@using SurcosBlazor.Shared
@using SurcosBlazor.Client.Auth
@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService toastService
<style type="text/css">
    .formLogin {
        margin: 0;
        padding: 0;
        background-color: #323232;
        height: 100vh;
        position: relative;
        width: 100vw;
        background-image: url('img/imglogin.jpg');
        background-size: cover;
        background-repeat: no-repeat;
    }

        .formLogin .formContent {
            display: block;
            padding: 20px;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            background: rgba(30,30,30,.6);
            width: 25vw;
            height: 50vh;
            min-width: 768px;
            min-height: 400px;
            text-align: center;
            animation-delay:3s;
            animation: initLogin 1s linear;
        }

            .formLogin .formContent h2 {
                margin-bottom: 5vh;
                margin-top: 3vh;
                color: white;
            }

            .formLogin .formContent input {
                width: 50%;
                margin: 15px auto;
                padding: 10px;
                border: none;
                background: transparent;
                display: block;
                color: white;
                outline: none;
                border-bottom: 2px solid #f3743d;
            }

    ::placeholder {
        color: white;
        font-weight: bold;
    }

    .formLogin .formContent button {
        width: 50%;
        padding: 10px 35px;
        margin: 50px auto;
        border: 1px solid white;
        border-radius: 0;
        display: block;
        background: transparent;
        color: white;
    }

        .formLogin .formContent button:hover {
            background: #f3743d;
            color: white;
            border: 1px solid #f3743d;
        }

</style>


<div class="formLogin">

    <div class="formContent">
        <h2>
            <strong><span class="">SURCOS</span></strong>
        </h2>

        <EditForm Model="userInfo" OnValidSubmit="LoginUsuario">

            <input type="text" class="" @bind="@userInfo.username" placeholder="Usuario" />



            <input type="password" Class="" @bind="@userInfo.Password" autocomplete="off" placeholder="Contraseña" />

            <button type="submit" class="">INGRESAR</button>
        </EditForm>

    </div>




</div>




@code {
    private UserInfo userInfo = new UserInfo();


    private async Task LoginUsuario()
    {
        if (userInfo.username != "" && userInfo.username != null && userInfo.Password != "" && userInfo.Password != null)
        {
            var result = await http.PostJsonAsync<UserToken>($"api/account/login/", userInfo);
            Console.WriteLine(result);
            await loginService.Login(result.Token);
            uriHelper.NavigateTo("/");
            
        }
        else
        {
            await Alerta("top-end", "error", "Usuario o contraseña Incorrectos");

        }


    }



    public async Task Alerta(string posicion = "top-end", string icono = "success", string mensaje = "Se creó el producto con éxito")
    {
        await js.InvokeAsync<object>("alerta", posicion, icono, mensaje);
    }

}
