#pragma checksum "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\ECommerce\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3aa751cfecd0ba98f88e8bc2231952bc439c2543"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SurcosBlazor.Client.Pages.ECommerce
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 2 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Shared;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 10 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Helpers;

#line default
#line hidden
#line 11 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared.Entidades;

#line default
#line hidden
#line 12 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared;

#line default
#line hidden
#line 13 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Repositorio;

#line default
#line hidden
#line 14 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 15 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#line 16 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\ECommerce\Index.razor"
using SurcosBlazor.Client.Auth;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\ECommerce\Index.razor"
using System.Net.Http;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\ECommerce\Index.razor"
using System.Text;

#line default
#line hidden
#line 8 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\ECommerce\Index.razor"
using System.Text.Json;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(EcommerceLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 340 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\ECommerce\Index.razor"
       

    public UserClienteInfo user { get; set; } = new UserClienteInfo();
    public List<Provincia> provincias { get; set; } = new List<Provincia>();
    public List<Departamento> departamentos { get; set; } = new List<Departamento>();
    public System.Security.Claims.ClaimsPrincipal userClaims { get; set; }
    public bool ShowCarrito { get; set; } = false;
    public CarritoCompras carrito { get; set; }
    public Provincia provincia { get; set; }
    public Departamento departamento { get; set; }
    public int ClienteId { get; set; }
    public Productos productosComponente { get; set; }
    public bool mostrarPedidoVendedor { get; set; } = false;
    public PedidoDetalleVendedor PedidoDetalleVendedor { get; set; }
    public PedidoDetalleCliente PedidoDetalleCliente { get; set; }
    public bool estaAutentificado { get; set; } = false;
    public VendedorPerfil VendedorPerfil { get; set; }
    public ListaPedidosCliente ListaPedidosCliente { get; set; }
    public UserClienteForm userClienteFormComponenet { get; set; }
    public List<Banner> banners { get; set; }
    protected override async Task OnInitializedAsync()
    {
        banners = await http.GetJsonAsync<List<Banner>>("api/banner");
        await UpdateAuthenticationStateAsync();
        provincias = await http.GetJsonAsync<List<Provincia>>("api/provincia");
        provincias = provincias.Where(x => x.eCommerce == true).ToList();
        await js.InvokeVoidAsync("intersectionObserver");


    }


    public async Task UpdateAuthenticationStateAsync()
    {
        var auth = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userClaims = auth.User;
        estaAutentificado = auth.User.Identity.IsAuthenticated;
        var clienteId = auth.User.Claims.FirstOrDefault(c => c.Type == "ClienteId");
        if (clienteId != null)
        {
            if (clienteId.Value != "0")
            {
                this.ClienteId = Convert.ToInt32(clienteId.Value);
                await buscarCliente(Convert.ToInt32(clienteId.Value));
                if (user.Cliente != null)
                {
                    await productosComponente.BuscarListas((user?.Cliente?.Domicilio.ProvinciaId ?? 0), user.Cliente.Id);
                    await carrito.ActualizarParametrosCarrito(user.Cliente, user.Cliente.Domicilio.Provincia, user.Cliente.Domicilio.Departamento);
                    await userClienteFormComponenet.ActualizarMapa();
                    await userClienteFormComponenet.BuscarDepartamentos();

                }
            }
            else
            {
                uri.NavigateTo("/logout");
            }
        }
        else
        {
            await getDomicilioFromLocalStorage();

            if (user.Cliente.Domicilio.Provincia == null || user.Cliente.Domicilio.Departamento == null)
            {
                await ModalEstatica("direccion");
            }

        }

        this.StateHasChanged();
    }


    public async Task LoginCallBack(int ClienteId)
    {
        await UpdateAuthenticationStateAsync();
        this.StateHasChanged();

    }
    public void toggleCarrito()
    {
        ShowCarrito = !ShowCarrito;
    }

    public async Task buscarCliente(int id)
    {

        user.Cliente = await http.GetJsonAsync<Cliente>($"api/Cliente/{id}");
        await js.SetInLocalStorage("Provincia", user.Cliente.Domicilio.Provincia.nombre);

        await js.SetInLocalStorage("Departamento", user.Cliente.Domicilio.Departamento.nombre);

    }

    public async Task ChangeProvincia(Provincia provincia)
    {
        departamentos = await http.GetJsonAsync<List<Departamento>>($"api/departamento?ProvinciaId={provincia.Id}");
        this.user.Cliente.Domicilio.Provincia = provincia;
        this.user.Cliente.Domicilio.ProvinciaId = provincia.Id;

        await js.SetInLocalStorage("Provincia", provincia.nombre);
        this.user.Cliente.Domicilio.Departamento = null;
        await productosComponente.BuscarListas((user?.Cliente?.Domicilio.ProvinciaId ?? 0), user?.ClienteId ?? 0);


    }
    public async Task ChangeDepartamento(Departamento departamento)
    {
        this.user.Cliente.Domicilio.Departamento = departamento;
        await js.SetInLocalStorage("Departamento", departamento.nombre);
        await carrito.ActualizarParametrosCarrito(user.Cliente, user.Cliente.Domicilio.Provincia, user.Cliente.Domicilio.Departamento);

    }

    public async Task goToTienda()
    {
        await js.InvokeAsync<object>("goToTienda");
    }
    public async Task ToggleModal(string id)
    {
        await js.InvokeAsync<object>("ModalToggle", id);
    }

    public async Task getDomicilioFromLocalStorage()
    {

        string provincia = await js.GetFromLocalStorage("Provincia");
        string departamento = await js.GetFromLocalStorage("Departamento");
        if (!string.IsNullOrEmpty(provincia))
        {
            this.user.Cliente.Domicilio.Provincia = await http.GetJsonAsync<Provincia>($"api/provincia/getByName?provinciaNombre={provincia}");
            this.user.Cliente.Domicilio.ProvinciaId = this.user.Cliente.Domicilio.Provincia.Id;
            if (this.user.Cliente.Domicilio.Provincia != null)
            {

                departamentos = await http.GetJsonAsync<List<Departamento>>($"api/departamento?ProvinciaId={this.user.Cliente.Domicilio.Provincia.Id}");
                await productosComponente.BuscarListas(user?.Cliente?.Domicilio?.Provincia.Id ?? 0, 0);
                if (!string.IsNullOrEmpty(departamento))
                {
                    this.user.Cliente.Domicilio.Departamento = await http.GetJsonAsync<Departamento>($"api/departamento/getByName?departamentoNombre={departamento}");
                    this.user.Cliente.Domicilio.DepartamentoId = this.user.Cliente.Domicilio.DepartamentoId;
                    await carrito.ActualizarParametrosCarrito(this.user.Cliente, this.user.Cliente.Domicilio.Provincia, this.user.Cliente.Domicilio.Departamento);

                }
            }

        }


    }
    public async Task ModalEstatica(string id)
    {
        await js.InvokeVoidAsync("ModalEstatica", id);
    }


    public async Task RecuperarProductosCarritoFromLocalStorage()
    {

        await carrito.RecuperarCarritoLocalStore();
        this.StateHasChanged();
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRepositorio repositorio { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILoginService loginService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager uri { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
    }
}
#pragma warning restore 1591
