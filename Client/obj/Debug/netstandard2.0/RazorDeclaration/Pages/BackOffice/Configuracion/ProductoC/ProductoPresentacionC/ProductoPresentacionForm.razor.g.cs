#pragma checksum "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Configuracion\ProductoC\ProductoPresentacionC\ProductoPresentacionForm.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a5f84de8a662dc876c8bbfdacdbb2e8011ee5ad4"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SurcosBlazor.Client.Pages.BackOffice.Configuracion.ProductoC.ProductoPresentacionC
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Shared;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 10 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Helpers;

#line default
#line hidden
#line 11 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared.Entidades;

#line default
#line hidden
#line 12 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared;

#line default
#line hidden
#line 13 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Repositorio;

#line default
#line hidden
#line 14 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 15 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#line 16 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Configuracion\ProductoC\ProductoPresentacionC\ProductoPresentacionForm.razor"
           [Authorize(Roles = "Admin, Configuracion")]

#line default
#line hidden
    public partial class ProductoPresentacionForm : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 84 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Configuracion\ProductoC\ProductoPresentacionC\ProductoPresentacionForm.razor"
       
    [Parameter] public ProductoPresentacion productoPresentacion { get; set; }
    [Parameter] public Producto producto { get; set; }
    public List<PresentacionProducto> presentacionProductos { get; set; }
    [Parameter] public string accion { get; set; }
    [Parameter] public EventCallback callback { get; set; }
    public bool cargando { get; set; }
    public async Task Confirmar()
    {
        try
        {
            productoPresentacion.Proveedor = null;
            if (accion == "Crear")
            {
                productoPresentacion.ProductoId = producto.Id;
                productoPresentacion.PresentacionProducto = null;
                productoPresentacion.Proveedor = null;

                await http.PostJsonAsync("api/ProductoPresentacion", productoPresentacion);
                await CloseAllModals();

                await callback.InvokeAsync(new Object());
                cargando = false;

                toastService.ShowSuccess($"Se creo correctamente la Presentacion del producto");

            }
            if (accion == "Editar")
            {
                productoPresentacion.Proveedor = null;
                productoPresentacion.Producto = null;
                productoPresentacion.PresentacionProducto = null;
                productoPresentacion.FormulaProducto = null;

                await http.PutJsonAsync($"api/ProductoPresentacion/{productoPresentacion.Id}", productoPresentacion);
                await CloseAllModals();

                await callback.InvokeAsync(new Object());

                cargando = false;
                toastService.ShowSuccess($"Se editó correctamente Presentacion del producto");

            }
        }
        catch (Exception ex)
        {
            await CloseAllModals();

            await callback.InvokeAsync(new Object());
            cargando = false;
            toastService.ShowError($"Ocurrió un error al intentar crear el pructo {ex.Message}");

        }

    }
    public async Task CloseAllModals()
    {

        await js.InvokeAsync<object>("CloseAllModals");
    }
    protected override async Task OnInitializedAsync()
    {
        await ListarPresentacionesProducto();
    }
    public async Task<List<Proveedor>> buscarProveedores(string proveedorName)
    {

        return await http.GetJsonAsync<List<Proveedor>>($"api/Proveedor?filtro={proveedorName}&cantidadDeRegistros=50");

    }
    public async Task ListarPresentacionesProducto()
    {
        presentacionProductos = await http.GetJsonAsync<List<PresentacionProducto>>("api/PresentacionProducto?cantidadDeRegistros=50");
    }
    public async Task<Proveedor> proveedorSeleccionado(Proveedor proveedor)
    {
        productoPresentacion.Proveedor = proveedor;
        productoPresentacion.ProveedorId = proveedor.Id;


        this.StateHasChanged();
        return proveedor;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
