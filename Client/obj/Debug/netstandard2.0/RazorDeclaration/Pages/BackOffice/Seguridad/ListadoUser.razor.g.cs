#pragma checksum "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Seguridad\ListadoUser.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3c844f1229238b3270eebc6a3b8bfe40abba4866"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SurcosBlazor.Client.Pages.BackOffice.Seguridad
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Shared;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 10 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Helpers;

#line default
#line hidden
#line 12 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared;

#line default
#line hidden
#line 13 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Repositorio;

#line default
#line hidden
#line 14 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 15 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#line 16 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Seguridad\ListadoUser.razor"
using SurcosBlazor.Client.Auth;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Seguridad\ListadoUser.razor"
using SurcosBlazor.Shared.Entidades;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Seguridad\ListadoUser.razor"
           [Authorize(Roles = "Admin")]

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(BackOfficeLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/BackOffice/Seguridad")]
    public partial class ListadoUser : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 301 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Seguridad\ListadoUser.razor"
       
    public string AcccionSobreUsuario { get; set; } = String.Empty;
    public List<UserInfo> users { get; set; }
    public List<Roles> rolesseleccionados { get; set; } = new List<Roles>();
    public List<Roles> roles { get; set; } = new List<Roles>();
    public List<Vendedor> vendedores { get; set; } = new List<Vendedor>();
    public List<Deposito> depositos { get; set; } = new List<Deposito>();
    public List<Caja> cajas { get; set; } = new List<Caja>();
    public bool cargando { get; set; }
    private UserInfo userInfo = new UserInfo();
    protected async Task ListarUsuarios()
    {
        users = await http.GetJsonAsync<List<UserInfo>>("/api/Account/Usuarios");

    }
    protected override async Task OnInitializedAsync()
    {
        await ListarUsuarios();
        roles = await http.GetJsonAsync<List<Roles>>("api/Account/Roles");
        vendedores = await http.GetJsonAsync<List<Vendedor>>("api/Vendedor?cantidadDeRegistros=50");
        depositos = await http.GetJsonAsync<List<Deposito>>("api/Deposito?cantidadDeRegistros=50");
        cajas = await http.GetJsonAsync<List<Caja>>("api/Caja?cantidadDeRegistros=50");

    }

    private async Task CrearUsuario()
    {


        var result = await http.PostJsonAsync<UserToken>("api/Account/crear", userInfo);
        await ListarUsuarios();
        cargando = false;

        AcccionSobreUsuario = "";
        await ModalToggle("User");
        await Alerta("top-end", "success", "Se creó el usuario correctamente");


    }

    public void AgregarRol(Roles rol)
    {

        if (userInfo.roles.Where(x => x.rol.Contains(rol.rol)).ToList().Count > 0)
        {
            userInfo.roles.Remove(userInfo.roles.Where(x => x.rol == rol.rol).First());
            foreach (var r in userInfo.roles)
            {
                Console.WriteLine(r.rol);
            }
        }
        else
        {
            userInfo.roles.Add(rol);
            foreach (var r in userInfo.roles)
            {
                Console.WriteLine(r.rol);
            }
        }


    }

    public void AgregarVendedor(Vendedor vendedor, bool bandera)
    {

        if (bandera)
        {
            userInfo.vendedores.Remove(userInfo.vendedores.Where(x => x.Id == vendedor.Id).First());
        }
        else
        {
            userInfo.vendedores.Add(vendedor);
        }

        this.StateHasChanged();
    }
    public void AgregarDeposito(Deposito deposito, bool bandera)
    {

        if (bandera)
        {
            userInfo.depositos.Remove(userInfo.depositos.Where(x => x.Id == deposito.Id).First());

        }
        else
        {
            userInfo.depositos.Add(deposito);
        }

        this.StateHasChanged();
    }
    public void AgregarCaja(Caja caja, bool bandera)
    {

        if (bandera)
        {
            userInfo.cajas.Remove(userInfo.cajas.Where(x => x.Id == caja.Id).First());

        }
        else
        {
            userInfo.cajas.Add(caja);
        }

        this.StateHasChanged();
    }

    protected async Task EditarUsuario()
    {
        userInfo.Cliente.Domicilio = null;
        userInfo.Cliente.Categoria = null;

        await http.PutJsonAsync<UserInfo>($"/api/Account/Editar/{userInfo.id}", userInfo);
        await ListarUsuarios();
        AcccionSobreUsuario = "";
        await ModalToggle("User");
        cargando = false;
        await Alerta("top-end", "info", "Se editó el usuario correctamente");
    }

    protected async Task Login(UserInfo user)
    {

        var result = await http.PostJsonAsync<UserToken>("api/Account/login", user);
        await loginService.Login(result.Token);
        uriHelper.NavigateTo("");

    }
    protected async Task CambiarContraseña()
    {
        await http.PostJsonAsync("api/Account/CambiarContraseña", userInfo);
        await Alerta("top-end", "success", "Se cambio la contraseña del usuario correctamente");
        AcccionSobreUsuario = "";

    }
    protected async Task EliminarUsuario()
    {

        await http.DeleteAsync($"api/Account/EliminarUsuario/{userInfo.id}");
        await Alerta("top-end", "info", "Se elimino");
        await ListarUsuarios();
        await ModalToggle("modalEliminar");
    }
    public async Task Alerta(string posicion = "top-end", string icono = "success", string mensaje = "Se creó el producto con éxito")
    {
        await js.InvokeAsync<object>("alerta", posicion, icono, mensaje);
    }

    public async Task ModalToggle(string id)
    {
        await js.InvokeAsync<object>("ModalToggle", id);
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILoginService loginService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager uriHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
