#pragma checksum "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Tesoreria\MovimientosInventarioDetalle.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "155c5058d15fefc9e54c2b39f6e0d6465f5a7ade"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SurcosBlazor.Client.Pages.BackOffice.Tesoreria
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Shared;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 10 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Helpers;

#line default
#line hidden
#line 11 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared.Entidades;

#line default
#line hidden
#line 12 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared;

#line default
#line hidden
#line 13 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Repositorio;

#line default
#line hidden
#line 14 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 15 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#line 16 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Tesoreria\MovimientosInventarioDetalle.razor"
           [Authorize(Roles = "Admin, Logistica, Administrativo")]

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(BackOfficeLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/BackOffice/Inventario/MovimientoInventario/{inventarioId:int}")]
    public partial class MovimientosInventarioDetalle : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 85 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Tesoreria\MovimientosInventarioDetalle.razor"
       
    [Parameter] public int? inventarioId { get; set; }

    public List<Deposito> depositos { get; set; }
    public List<ProductoPresentacion> productosPresentacion { get; set; }
    public Deposito deposito { get; set; }
    public ProductoPresentacion productoPresentacion { get; set; }
    public Inventario inventario { get; set; }
    public MovimientoInventario movimientoInventario { get; set; }
    private int paginaActual = 1;
    private int paginasTotales;
    private HttpResponseWrapper<List<MovimientoInventario>> responseHttp;
    public System.Security.Claims.ClaimsPrincipal User { get; set; }
    public string userName { get; set; }


    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await ListarMovimientosInventario(pagina);
    }
    public async Task ListarMovimientosInventario(int pagina = 1)
    {
        responseHttp = await repositorio.Get<List<MovimientoInventario>>($"api/movimientoInventario?inventarioId={inventario.Id}&pagina={pagina}&cantidadDeRegistros=20");
        if (!responseHttp.Error)
        {
            inventario.MovimientosInventario = responseHttp.Response;

            var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();

            paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());

        }



    }
    protected override async Task OnParametersSetAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        User = authState.User;
        userName = User.Identity.Name;

        await BuscarInventario();
        await ListarDepositos();
        await ListarProductosPresentacion();
    }
    public async Task ListarDepositos()
    {
        depositos = await http.GetJsonAsync<List<Deposito>>($"api/deposito/depositosHabilitados?userName={userName}");
    }
    public async Task ListarProductosPresentacion()
    {
        productosPresentacion = await http.GetJsonAsync<List<ProductoPresentacion>>("api/productopresentacion/productoParaInventario");
    }

    public async Task BuscarInventario()
    {
        if (inventarioId != 0 && inventarioId != null)
        {

            inventario = await http.GetJsonAsync<Inventario>($"api/inventario/{inventarioId}");
            paginaActual = 1;
            await ListarMovimientosInventario(paginaActual);
            deposito = inventario.Deposito;
            productoPresentacion = inventario.ProductoPresentacion;
            movimientoInventario = new MovimientoInventario { Inventario = inventario, InventarioId = inventario.Id };
        }
    }
    public async Task BuscarInventario(int productoId, int depositoId)
    {
        if (productoId != 0 && depositoId != 0)
        {

            inventario = await http.GetJsonAsync<Inventario>($"api/inventario/DetalleInventario?productoId={productoId}&depositoId={depositoId}");
            paginaActual = 1;
            if (inventario.Id != 0)
            {
                await ListarMovimientosInventario(paginaActual);
            }
            movimientoInventario = new MovimientoInventario
            {
                Inventario = new Inventario
                {
                    ProductoPresentacion = productoPresentacion,
                    Deposito = deposito,
                    ProductoPresentacionId = productoPresentacion.Id,
                    DepositoId = deposito.Id,
                    Id = inventario.Id
                }
                                                                                        ,
                InventarioId = inventario.Id
            };
        }
    }

    public async Task ToggleModal(string id)
    {

        await js.InvokeAsync<object>("ModalToggle", id);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider authStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRepositorio repositorio { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
