#pragma checksum "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Compras\FacturasCompras\FacturaForm.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2387bb3400d6703f27555f7146a9837e4f33f493"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SurcosBlazor.Client.Pages.BackOffice.Compras.FacturasCompras
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Shared;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 10 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Helpers;

#line default
#line hidden
#line 11 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared.Entidades;

#line default
#line hidden
#line 12 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Shared;

#line default
#line hidden
#line 13 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using SurcosBlazor.Client.Repositorio;

#line default
#line hidden
#line 14 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 15 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#line 16 "C:\Users\agust\source\repos\SurcosBlazor\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Compras\FacturasCompras\FacturaForm.razor"
           [Authorize(Roles = "Admin, Compras")]

#line default
#line hidden
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(BackOfficeLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/BackOffice/Compras/ComprobanteCompras")]
    public partial class FacturaForm : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 172 "C:\Users\agust\source\repos\SurcosBlazor\Client\Pages\BackOffice\Compras\FacturasCompras\FacturaForm.razor"
       
    public int Id { get; set; } = 0;
    public TablaGenerica<Proveedor> tablaProveedors { get; set; }
    public FacturaCompras factura { get; set; } = new FacturaCompras();
    public string userName { get; set; }
    public System.Security.Claims.ClaimsPrincipal User { get; set; }
    public List<Producto> productos { get; set; }
    public List<ProductoPresentacion> productoPresentaciones { get; set; }
    public List<EstadoFactura> estadosFactura { get; set; }
    public List<Deposito> depositos { get; set; }
    public List<TipoComprobante> tiposComprobante { get; set; }
    public bool cargando { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            factura = await http.GetJsonAsync<FacturaCompras>($"api/FacturaCompras/{Id}");
        }
    }

    public async Task BuscarEstadoFactura()
    {

        estadosFactura = await http.GetJsonAsync<List<EstadoFactura>>("api/EstadoFactura");

    }

    public async Task ListarDepositos()
    {
        var respuesta = await repositorio.Get<List<Deposito>>($"api/deposito/depositosHabilitados?userName={userName}");
        if (!respuesta.Error)
        {
            depositos = respuesta.Response;
        }
        else
        {
            toastService.ShowError(await respuesta.HttpResponseMessage.Content.ReadAsStringAsync());
        }
    }
    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        User = authState.User;
        userName = User.Identity.Name;
        await ListarDepositos();
        await ListarTiposComprobante();

        if (Id != 0)
        {
            await BuscarEstadoFactura();
        }
    }
    public async Task<List<Proveedor>> buscarProveedores(string proveedorName)
    {

        return await http.GetJsonAsync<List<Proveedor>>($"api/Proveedor?filtro={proveedorName}&cantidadDeRegistros=50");

    }
    public async Task<Proveedor> proveedorSeleccionado(Proveedor proveedor)
    {
        factura.Proveedor = proveedor;
        factura.ProveedorId = proveedor.Id;


        this.StateHasChanged();
        return proveedor;
    }
    public async Task ListarTiposComprobante()
    {
        tiposComprobante = await http.GetJsonAsync<List<TipoComprobante>>("api/tipocomprobante");
    }

    public async Task CrearFactura()
    {

        //creacion de factura
        if (Id == 0)
        {
            var response = await repositorio.Post<FacturaCompras>("api/FacturaCompra", factura);

            if (response.Error)
            {
                cargando = false;
                toastService.ShowError(await response.HttpResponseMessage.Content.ReadAsStringAsync());
            }
            else
            {
                cargando = false;

                toastService.ShowSuccess("Se creó el factura correctamente!");
                factura.detallesFactura = new List<DetalleFacturaCompras>();
                uri.NavigateTo("/BackOffice/Compras/ListadoComprobates");
                this.StateHasChanged();
            }
        }
        //Edicion de factura
        else
        {
            var response = await repositorio.Put<FacturaCompras>($"api/FacturaCompras/{factura.Id}", factura);

            if (response.Error)
            {
                cargando = false;

                toastService.ShowError(await response.HttpResponseMessage.Content.ReadAsStringAsync());
            }
            else
            {
                cargando = false;

                toastService.ShowSuccess("Se editó el factura correctamente!");
                uri.NavigateTo("/BackOffice/Compras/ListadoComprobantes");
                this.StateHasChanged();
            }
        }
    }
    public async Task ToggleModal(string id)
    {

        await js.InvokeAsync<object>("ModalToggle", id);
    }





    public async Task<List<ProductoPresentacion>> buscarProductos(string filtro)
    {
        return await http.GetJsonAsync<List<ProductoPresentacion>>($"api/ProductoPresentacion/ProductosPresentacionPorProveedor?ProveedorId={factura.ProveedorId}&filtro={filtro}");
    }



    public void CalcularTotal()
    {
        factura.totalComprobante = factura.detallesFactura.Sum(x => x.precioUnitario * x.cantidad);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager uri { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRepositorio repositorio { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider authStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
    }
}
#pragma warning restore 1591
