@using System.IO
@using Blazor.FileReader
@inject IFileReaderService fileReaderService



<div class="justify-content-center">
    <label>@Label</label>
    @if (imagenBase64 != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="data:image/jpeg;base64, @imagenBase64" style="width: 10vw; height:10vw; border-radius:50%;" />
            </div>
        </div>
    }
    @if (ImagenTemporal != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="@ImagenTemporal" style="width: 10vw; height:10vw; border-radius:50%;" />
            </div>
        </div>
    }
</div>
<div>

    <div>
        <input type="file" @onchange="ImagenFileSelected" @ref="inputElement" Accept=".jpg,.jpeg,.png,.jfif" />
    </div>
</div>

@code {
    [Parameter] public string Label { get; set; } = "Imagen";
    [Parameter] public string ImagenTemporal { get; set; }
    [Parameter] public EventCallback<string> ImagenSeleccionada { get; set; }
    private string imagenBase64;
    ElementReference inputElement;



    async Task ImagenFileSelected()
    {
        @foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var bytesImagen = new byte[memoryStream.Length];
                memoryStream.Read(bytesImagen, 0, (int)memoryStream.Length);
                imagenBase64 = Convert.ToBase64String(bytesImagen);
                await ImagenSeleccionada.InvokeAsync(imagenBase64);
                ImagenTemporal = null;
                StateHasChanged();
            }
        }

    }

}